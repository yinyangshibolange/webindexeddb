!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("core-js/modules/web.dom-collections.iterator.js"),require("core-js/modules/es.array.sort.js"),require("core-js/modules/es.promise.js"),require("core-js/modules/es.array.push.js"),require("core-js/modules/es.error.cause.js")):"function"==typeof define&&define.amd?define(["core-js/modules/web.dom-collections.iterator.js","core-js/modules/es.array.sort.js","core-js/modules/es.promise.js","core-js/modules/es.array.push.js","core-js/modules/es.error.cause.js"],t):((e="undefined"!=typeof globalThis?globalThis:e||self).bundle=e.bundle||{},e.bundle.umd=e.bundle.umd||{},e.bundle.umd.min=t())}(this,(function(){"use strict";function e(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function t(t){for(var o=1;o<arguments.length;o++){var s=null!=arguments[o]?arguments[o]:{};o%2?e(Object(s),!0).forEach((function(e){r(t,e,s[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(s)):e(Object(s)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(s,e))}))}return t}function r(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class o{constructor(e){r(this,"dbInfo",{name:"dbname",db:null,version:1,stores:[]}),this.dbInfo=e,this.init()}init(){return new Promise(((e,r)=>{const o=window.indexedDB.open(this.dbInfo.name,this.dbInfo.version);o.onsuccess=t=>{this.dbInfo.db=t.target.result,e(this.dbInfo.db)},o.onerror=e=>{r(e)},o.onupgradeneeded=e=>{let r;this.dbInfo.db=e.target.result,Array.isArray(this.dbInfo.stores)&&this.dbInfo.stores.forEach((e=>{const{storeName:o,indexs:s}=e;this.dbInfo.db.objectStoreNames.contains(o)||(r=this.dbInfo.db.createObjectStore(o,{keyPath:"id"})),Array.isArray(s)&&s.forEach((e=>{try{r.createIndex(e.name,e.keyPath,t({unique:!1},e.params))}catch(e){console.error(e)}}))}))}}))}openDB(){return new Promise(((e,t)=>{const r=window.indexedDB.open(this.dbInfo.name,this.dbInfo.version);r.onsuccess=t=>{this.dbInfo.db=t.target.result,e(this.dbInfo.db)},r.onerror=e=>{t(e)}}))}addData(e,t){return new Promise(((r,o)=>{let s=this.dbInfo.db.transaction([e],"readwrite").objectStore(e).add(t);s.onsuccess=e=>{r(e)},s.onerror=e=>{throw new Error(e.target.error)}}))}getDataByKey(e,t){return new Promise(((r,o)=>{let s=this.dbInfo.db.transaction([e]).objectStore(e).get(t);s.onerror=e=>{o(e)},s.onsuccess=e=>{r(s.result)}}))}cursorGetData(e){let t=[],r=this.dbInfo.db.transaction(e,"readwrite").objectStore(e).openCursor();return new Promise(((e,o)=>{r.onsuccess=r=>{let o=r.target.result;o?(t.push(o.value),o.continue()):e(t)},r.onerror=e=>{o(e)}}))}cursorPage(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:10;return new Promise(((t,s)=>{let n=[],a=this.dbInfo.db.transaction([e],"readonly").objectStore(e),d=a.openCursor(),c=a.count(),i=null;d.onsuccess=e=>{let s=e.target.result;if(s){if(i===o-1){n.push(s.value);try{t({list:n,total:c.result})}catch(e){t({list:[],total:0})}return}null===i&&1!==r?(i=0,s.advance((r-1)*o)):(i++,n.push(s.value),s.continue())}else try{t({list:n,total:c.result})}catch(e){t({list:[],total:0})}},d.onerror=()=>{s("读取数据失败")}}))}getDataByIndex(e,t,r){let o=this.dbInfo.db.transaction(e,"readwrite").objectStore(e).index(t).get(r);return new Promise(((e,t)=>{o.onerror=e=>{t(e)},o.onsuccess=t=>{e(t.target.result)}}))}cursorGetDataByIndex(e,t){let r=[],o=this.dbInfo.db.transaction(e,"readwrite").objectStore(e);return new Promise(((s,n)=>{const{indexs:a}=this.dbInfo.stores.find((t=>t.storeName===e))||{};if(!a)return void s([]);let d="",c=[];for(const e in t)d+=","+e,c.push(t[e]);d=d.substring(1);const{name:i}=a.find((e=>e.keyPath===d))||{};if(!i)return void s([]);let u=o.index(i).openCursor(IDBKeyRange.only(1===c.length?c[0]:c));u.onsuccess=e=>{let t=e.target.result;t?(r.push(t.value),t.continue()):s(r)},u.onerror=e=>{n(e)}}))}updateDB(e,t){let r=this.dbInfo.db.transaction([e],"readwrite").objectStore(e).put(t);return new Promise(((e,t)=>{r.onsuccess=t=>{e(t)},r.onerror=t=>{e(t)}}))}deleteDB(e,t){let r=this.dbInfo.db.transaction([e],"readwrite").objectStore(e).delete(t);return new Promise(((e,t)=>{r.onsuccess=t=>{e(t)},r.onerror=t=>{e(t)}}))}deleteDBAll(e){let t=window.indexedDB.deleteDatabase(e);return new Promise(((e,r)=>{t.onerror=e=>{console.error(e)},t.onsuccess=e=>{console.info(e)}}))}closeDB(){this.dbInfo.db.close(),console.info("数据库已关闭")}}function s(e){const t=[{key:"addtime",type:"desc"},...arguments.length>1&&void 0!==arguments[1]?arguments[1]:[]];return e.sort(((e,r)=>{let o=!1;for(let s=0;s<t.length;s++){const n=t[s];let a,d;if("string"==typeof n?(a="desc",d=n):"object"==typeof n&&(a="string"==typeof n.type?n.type.toLowerCase():"desc",d=n.key),"desc"===a&&r[d]>e[d]){o=!0;break}if("asc"===a&&e[d]>r[d]){o=!0;break}}return o}))}class n{constructor(e){if(r(this,"db",null),!this.db){const{name:t,version:r,stores:s}=e;this.db=new o({name:t,version:r,db:null,stores:s})}}async addItem(e,r){try{await this.db.openDB(e)}catch(e){return{code:-1,msg:e}}const o=new Date;try{const s=await this.db.addData(e,t(t({},r),{},{addtime:o.getTime(),addtimeformat:o.Format("yyyy-MM-dd hh:mm:ss")}));return this.db.closeDB(),{code:0,data:s}}catch(e){return this.db.closeDB(),{code:-1,msg:e}}}async addBatch(e,r){if(!Array.isArray(r)||0===r.length)return{code:-1,msg:"参数错误，批量添加参数应为一个非空列表"};try{await this.db.openDB(e)}catch(e){return{code:-1,msg:e}}const o=new Date;let s=[];for(let n=0;n<r.length;n++){const a=r[n];try{const r=await this.db.addData(e,t(t({},a),{},{addtime:o.getTime(),addtimeformat:o.Format("yyyy-MM-dd hh:mm:ss")}));s.push({code:0,origin:a,data:r})}catch(e){s.push({code:-1,origin:a,data:e})}}return this.db.closeDB(),{code:0,data:s}}async updateItem(e,r){try{await this.db.openDB(e)}catch(e){return{code:-1,msg:e}}const o=new Date;try{const s=await this.db.updateDB(e,t(t({},r),{},{updatetime:o.getTime(),updatetimeformat:o.Format("yyyy-MM-dd hh:mm:ss")}));return this.db.closeDB(),{code:0,data:s}}catch(e){return this.db.closeDB(),{code:-1,msg:e}}}async updateBatch(e,r){if(!Array.isArray(r)||0===r.length)return{code:-1,msg:"参数错误，批量添加参数应为一个非空列表"};try{await this.db.openDB(e)}catch(e){return{code:-1,msg:e}}const o=new Date,s=[];for(let n=0;n<r.length;n++){const a=r[n];try{const r=await this.db.updateDB(e,t(t({},a),{},{updatetime:o.getTime(),updatetimeformat:o.Format("yyyy-MM-dd hh:mm:ss")}));s.push({code:0,data:r})}catch(e){s.push({code:-1,msg:e})}}return this.db.closeDB(),{code:0,data:s}}async delItem(e,t){try{await this.db.openDB(e)}catch(e){return{code:-1,msg:e}}try{const r=await this.db.deleteDB(e,t);return this.db.closeDB(),{code:0,data:r}}catch(e){return this.db.closeDB(),{code:-1,msg:e}}}async delBatch(e,t){if(!Array.isArray(t)||0===t.length)return{code:-1,msg:"参数错误，批量添加参数应为一个非空列表"};try{await this.db.openDB(e)}catch(e){return{code:-1,msg:e}}const r=[];for(let o=0;o<t.length;o++)try{const s=await this.db.deleteDB(e,t[o]);r.push({code:0,data:s})}catch(e){r.push({code:-1,msg:e})}return this.db.closeDB(),{code:0,data:r}}async getAll(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];try{await this.db.openDB(e)}catch(e){return{code:-1,msg:e}}try{let r=await this.db.cursorGetData(e);return r=s(r,t),this.db.closeDB(),{code:0,data:r}}catch(e){return this.db.closeDB(),{code:-1,msg:e}}}async queryAll(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];try{await this.db.openDB(e)}catch(e){return void console.error(e)}try{let o=await this.db.cursorGetDataByIndex(e,t);return o=s(o,r),this.db.closeDB(),{code:0,data:o}}catch(e){return this.db.closeDB(),{code:-1,msg:e}}}async queryPage(e,t,r){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:10;try{await this.db.openDB(e)}catch(e){return{code:-1,msg:e}}try{let a=await this.db.cursorGetDataByIndex(e,t);return a=s(a,r),this.db.closeDB(),{code:0,data:{total:a.length,list:a.slice((o-1)*n,o*n)}}}catch(e){return this.db.closeDB(),{code:-1,msg:e}}}}return window.IndexdbStore=n,n}));
